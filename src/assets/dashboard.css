/* Dashboard layout */
@import "luci-theme.css";

:root {
  /* visually confirmation
   * To size the main-view, use top and bottom
   * of the main-view.outlet div (should be sum of margins) */
  --main-view-top: 64px;
  --main-view-bottom: 0px;
  --main-view-min-width: 400px;

  /* gap between controller and outlet */
  --controller-outlet-gap: 0.15rem;
  --controller-outlet-radius: 1rem;

  /* computed value to set the height of main-view */
  --main-view-height: calc(
    100vh
    - var(--main-view-frame-margin) * 2
    - var(--main-view-top)
    - var(--main-view-bottom)
  );

  /* â¬œ Decide on which box to set margin; rest set to zero
   * customize here
   * use to set outer margins */
  --root-margin: 0px;
  --main-margin: 0px;
  --main-padding: 0px;
  --main-wrapper-margin: 0px;
  --top-bar-height: 50px;
  --main-view-margin: 0px; /* keep at zero; used in a couple of layers */
  --main-view-padding: 0px; /* keep at zero; used in a couple of layers */
  --main-view-frame-margin: 0.75rem;

  /* flexbox - menue, controller & main views
   *
   * within main,
   * ðŸ‘‰ main-menu
   * ðŸ‘‰ main-view */
  --main-menu-flex: 1 3 0%;
  --main-view-flex: 6 1 0%;

  /* within main-controller-root
   * ðŸ‘‰ main-controller
   * ðŸ‘‰ main-view.outlet */
  --projects-controller-flex: 1 3 0%;
  --main-view-outlet-flex: 5 1 0%;
}


.box.no-border {
  margin: 10px;
  padding: 0px;
  border: none;
  box-sizing: border-box;
}
.box {
  margin: 10px;
  padding: 10px;
  border: solid 1px;
  box-sizing: border-box;
}

.box.root {
  display: flex;
  position: relative;
  margin: var(--root-margin);
  padding: 0;
}

.box.root > .inner {
  flex-grow: 1;
}
.stack {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  gap: 10px;
  box-sizing: border-box;
}
/* can sometimes be substituted with display: block */
.nostack {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  gap: 10px;
}
.nogap {
  gap: 0;
}
.noradius {
  border-radius: 0;
}
.space-between {
  justify-content: space-between;
}
.align-items-center {
    align-items: center;
}
/* app-specific classes */
.core-app-main {
  max-width: unset;
  padding: 0;
  margin: 0;
}
.main.wrapper {
  margin: var(--main-wrapper-margin);
}
.main {
  margin: var(--main-margin);
  padding-top: var(--main-padding);
  width: 100%;
}
/* item exposed to container dynamics
 * inner reserved for layout of item */
.main-menu {
  margin: 0;
  padding: 0;
  flex: var(--main-menu-flex);
  margin-right: auto;
  max-width: 240px;
}
.main-controller-root {
  gap: 0;
}
.projects.main-controller {
  margin: 10px;
  padding: 0;
  flex: var(--projects-controller-flex);
  max-width: 350px;
}
.projects.main-controller.mini {
  flex: unset;
  width: 80px;
}
/* exposed to container dynamics
 * inner reserved for layout of item */
.main-view {
  flex: var(--main-view-flex);
  margin: var(--main-view-margin);
  padding: var(--main-view-padding);
}
.main-view.outlet {
  flex: var(--main-view-outlet-flex);
  min-width: var(--main-view-min-width);
}
/* outlet and projects frames complements */
.main-view.outlet.frame {
    border-top-right-radius: var(--controller-outlet-radius);
    border-bottom-right-radius: var(--controller-outlet-radius);
    border-top-left-radius: 0rem;
    border-bottom-left-radius: 0rem;
    margin-left: var(--controller-outlet-gap);
}
.main-controller.projects.frame{
    border-top-right-radius: 0rem;
    border-bottom-right-radius: 0rem;
    border-top-left-radius: var(--controller-outlet-radius);
    border-bottom-left-radius: var(--controller-outlet-radius);
    background-color: var(--color-primary-contrastText);
    padding: 0.7rem;
    margin-right: var(--controller-outlet-gap);
}
.main-view.frame {
    border-radius: 1rem;
    background-color: var(--color-primary-contrastText);
    margin: var(--main-view-frame-margin);
}
.main-view.frame.off {
    border-radius: 0;
    background-color: inherit;
    margin: var(--main-view-margin);
}
/* ðŸ”– ðŸ”‘ The top is not 0 but lower on the screen.
 *    Also consider, you are pushing parents with
 *    margins and padding down; we need to consider
 *    the cummulative size of the bottom margins.
 */
.main-view.sizing-frame {
  height: var(--main-view-height);
}
.main-view.frame.sizing {
  /* height: var(--main-view-height); */
}
.bottom-navigation.positioning-frame {
  margin-top: auto;
}

/* ---------------------------------------- */
/* Side nav */
.dark-toolbar {
  background-color: #52a5b8;
}

.light-toolbar {
  background-color: #52a5b8;
}

.appbar a,
.luci-toolbar a,
.links a {
    text-decoration: none;
    color: unset;
}
.side-nav {
    height: inherit;
}
.main-controller.projects {
    --padding: 7px;
}
.project-summary-view > .short-id {
    font-size: 1em;
}
.project-summary-view.mini > .short-id {
    font-size: 0.8em;
}
/* hide when in mini mode */
.project-summary-view.mini  .short-id > .label,
.project-summary-view.mini  .delete-button  {
    display: none;
}
.project-summary-view {
    flex: 1;
}
.new-project.center {
    margin: 16px auto 8px auto;
}
/* mini version of new-project button */
.new-project.button.mini {
    background-color: var(--color-primary-main);
    height: 34px;
    width: 34px;
    color: var(--color-primary-contrastText);
}
.new-project.button.mini:hover {
    background-color: var(--color-primary-light);
    color: var(--color-primary-main);
}
/* projects list (heading, nav and items) */
.main-controller.projects > .header {
    /* follow nav */
    margin: 0;
}
.main-controller.projects > .header > .heading {
    /* aka title match list item */
    margin: 0;
    padding: var(--padding);
}
/* adjust toggle */
.main-controller.projects > .header > .toggle {
    margin: 0;
    padding: var(--padding);
    padding-right: var(--padding);
}
.main-controller.projects.mini > .header > .toggle {
    margin: 0 auto;
}
.list.projects > .item {
    opacity: 0.5;
    cursor: pointer;
    padding: var(--padding);
}
.list.projects > .item:hover {
    background-color: rgba(0, 0, 0, 0.04);
    opacity: 1;
}
.list.projects > .item.enable {
    opacity: 1;
}
.list.projects > .item.Mui-selected {
    background-color: var(--color-primary-superLight);
    opacity: 1;
}
/* ---------------------------------------- */
/*
 * Debugging layout markers
 */
.marker {
  position: absolute;
  width: 50px;
  height: 2px;
  z-index: 1099;
}
.marker.top {
  right: 4px;
  background: cyan;
  top: var(--main-view-top);
}
.marker.bottom {
  right: 4px;
  background: #f433ff;
  bottom: var(--main-view-bottom);
}
.marker.top.computed {
  top: calc(0vh + var(--main-view-top));
  right: 24px;
  background: #000;
}
/* ----------------------------------------
 * Design process
 */
ul[title]::before {
  content: attr(title);
  /* then add some nice styling as needed, eg: */
  display: block;
  font-weight: bold;
  padding: 4px;
  padding-left: 0px;
  margin-left: -10px;
}
.next-steps ul {
  list-style-position: outside;
  margin-left: -20px;
}
.next-steps ul > li {
  font-size: 12px;
}
.done {
  text-decoration: line-through;
}
/* ---------------------------------------- */
.project-view {
  flex-grow: 1;
  flex-wrap: nowrap;
  overflow: hidden;
}
.message {
  font-size: 30px;
}
/* Style the navbar */
.appbar {
  height: var(--top-bar-height);
}

/* Navbar links */
.appbar a {
  float: left;
  display: block;
  text-align: center;
  padding: 14px;
  text-decoration: none;
}

/* Page content */
.content {
  padding: 16px;
}

/* other css */
.left-align {
  margin: 0 auto 0 0;
  display: block;
  width: fit-content;
}
.right-align {
  margin: 0 0 0 auto;
  display: block;
  width: fit-content;
}
.center-align {
  margin: 0 auto 0 auto;
  display: block;
  width: fit-content;
}
/* The sticky class is added to the navbar with JS when it reaches its scroll position */
.sticky {
  position: fixed;
  top: 0;
  width: 100%;
}

/* Add some top padding to the page content to prevent sudden quick movement (as the navigation bar gets a new position at the top of the page (position:fixed and top:0) */
.sticky + .content {
  padding-top: 60px;
}
